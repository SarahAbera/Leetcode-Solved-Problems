# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def binaryTreePaths(self, root: Optional[TreeNode]) -> List[str]:

        output = []
        def backtrack(arr,node):
            if not(node):
                return
            if not(node.left) and not(node.right):
                arr.append(str(node.val))
                output.append("->".join(arr))
                arr.pop()
                return
            
            arr.append(str(node.val))
            backtrack(arr,node.left)
            backtrack(arr,node.right)
            arr.pop()
            
        backtrack([],root)
        return output
