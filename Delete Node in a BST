# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def deleteNode(self, root: Optional[TreeNode], key: int) -> Optional[TreeNode]:
        if root is None:
            return
            
        if root.val == key:
            if root.right is None:
                return root.left
                
            successor = root.right
            prev = root
            while successor and successor.left:
                prev = successor
                successor = successor.left
    
            if prev.val == key:
                successor.left = root.left
                return successor 
            prev.left = successor.right
            successor.left = root.left
            successor.right = root.right
            return successor          
            
        if root.val > key:
            root.left = self.deleteNode(root.left, key)
        else:
            root.right = self.deleteNode(root.right, key)

        return root

        
