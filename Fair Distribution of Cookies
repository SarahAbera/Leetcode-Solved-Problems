class Solution:
    def distributeCookies(self, cookies: List[int], k: int) -> int:
        if len(cookies) == k:
            return max(cookies)
        
        unfairness = inf
        def backtrack(child,idx):
            nonlocal unfairness
            if idx == len(cookies):
                unfairness = min(unfairness,max(child))
                return
            if max(child) >= unfairness:
                return
            for i in range(len(child)):
                child[i] += cookies[idx]
                backtrack(child,idx+1)
                child[i] -= cookies[idx]

        backtrack([0]*k, 0) 
        return unfairness  
