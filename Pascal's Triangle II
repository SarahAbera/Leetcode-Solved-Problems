###RECURSIVE APPROACH
class Solution:
    def getRow(self, rowIndex: int) -> List[int]:
        self.rowIndex = rowIndex
        return self.helper(self.rowIndex,[1])

    def helper(self, rowIndex, new_array):
        if rowIndex == 0:
            return new_array
    
        row_array = [1]
        for i in range(1,len(new_array)):
            row_array.append(new_array[i] + new_array[i-1])
        row_array.append(1)

        return self.helper(rowIndex-1,row_array)

#### ITERATIVE APPROACH
class Solution:
    def getRow(self, rowIndex: int) -> List[int]:
        if rowIndex == 0:
            return [1]
        indexed_array = [1,1]
        for i in range(2,rowIndex+1):
            new = [1]*(i+1)
            for j in range(len(indexed_array)-1):
                new[j+1] = indexed_array[j] + indexed_array[j+1]
            indexed_array = new
        return indexed_array
##########################################################
class Solution:
    def getRow(self, rowIndex: int) -> List[int]:
        if rowIndex == 0:
            return [1]
        result = [1]
        arr = self.getRow(rowIndex-1)
        for i in range(len(arr)-1):
            result.append(arr[i] + arr[i+1])
        result.append(1)
        return result
