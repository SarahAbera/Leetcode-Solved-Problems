class NumMatrix:

    def __init__(self, matrix: List[List[int]]):
        self.matrix = matrix
        self.col = len(self.matrix[0]) + 1
        self.row = len(self.matrix) + 1
        self.prefix = [[0]*self.col for _ in range(self.row)]
        for r in range(len(matrix)):
            for c in range(len(matrix[0])):
                self.prefix[r+1][c+1] = self.prefix[r][c+1] + self.prefix[r+1][c] - self.prefix[r][c] + self.matrix[r][c]

    def sumRegion(self, row1: int, col1: int, row2: int, col2: int) -> int:     
        left_sum = self.prefix[row2+1][col1]
        top_sum = self.prefix[row1][col2+1]
        diagonal = self.prefix[row1][col1]
        current = self.prefix[row2+1][col2+1]
        sumRange = current + diagonal - left_sum - top_sum
        return sumRange


# Your NumMatrix object will be instantiated and called as such:
# obj = NumMatrix(matrix)
# param_1 = obj.sumRegion(row1,col1,row2,col2)
