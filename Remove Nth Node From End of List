# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:
        slow = head
        fast = head
        dummy = ListNode(0,head)
        if head.next == None:
            next = dummy.next.next
            dummy.next = next
            return dummy.next

        while n > 0:
            fast = fast.next
            n -= 1
        if fast == None:
            next = dummy.next.next
            dummy.next = next
            return dummy.next
        while fast and fast.next:
            slow = slow.next
            fast = fast.next
        next = slow.next.next
        slow.next = next

        return head
