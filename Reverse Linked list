# With the use of arraylist
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        arr = []
        if head == None:
            return head
        while head:
            arr.append(head)
            head = head.next

        for i in range(len(arr)):
            if i == 0:
                arr[i].next = None
            else:
                arr[i].next = arr[i-1]
        return arr[-1]

# By manipulating nodes
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
       
        prev,current=None,head
        while current:
            next=current.next
            current.next=prev
            prev=current
            current=next
        return prev
