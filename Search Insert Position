class Solution:
    def searchInsert(self, nums: List[int], target: int) -> int:
        
        left = -1
        right = len(nums)

        while right > left + 1:
            mid = left + (right - left)//2
            if nums[mid] < target:
                left = mid
            elif nums[mid] > target:
                right = mid
            else:
                return mid
        
        return right
   
   ###############################################################
   
   class Solution:
    def searchInsert(self, nums: List[int], target: int) -> int:
        
        return bisect_left(nums,target)
        
   #############################################################
   
   class Solution:
    def searchInsert(self, nums: List[int], target: int) -> int:
        left = 0
        right = len(nums) - 1
        while left <= right:
            mid = (left + right) // 2

            if nums[mid] == target:
                return mid
            elif nums[mid] > target:
                right = mid - 1
            else:
                left = mid + 1
        return left
        
