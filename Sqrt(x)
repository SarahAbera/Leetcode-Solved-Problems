class Solution:
    def mySqrt(self, x: int) -> int:
        if x == 1:
            return 1
        
        nums = [i for i in range(1,int((x)**0.5) + 1)]    
        low = 0
        high = len(nums) - 1
        rounded = 0
        while low <= high:
            mid = low + (high -  low)//2
            if nums[mid]**2 > x:
                high = mid - 1
            elif nums[mid]**2 < x:
                rounded = max(rounded,nums[mid])
                low = mid + 1
            elif nums[mid]**2 == x:
                return nums[mid]
        return rounded
        
###############################################################
class Solution:
    def mySqrt(self, x: int) -> int:
        if x == 0:
            return 0
        
        low = 1
        high = x
        rounded = 0
        while low <= high:
            mid = low + (high -  low)//2
            if mid**2 > x:
                high = mid - 1
            elif mid**2 < x:
                rounded = max(rounded,mid)
                low = mid + 1
            else:
                return mid
        return rounded
