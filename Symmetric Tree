# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isSymmetric(self, root: Optional[TreeNode]) -> bool:
        return self.is_symmetric(root.left,root.right)
        
    def is_symmetric(self,left,right):

        if left == None and right == None:
            return True
        if left == None and right or right == None and left:
            return False

        if left.val == right.val:
            outer_checker = self.is_symmetric(left.left,right.right)
            inner_checker = self.is_symmetric(left.right,right.left)
            return outer_checker and inner_checker

        return False
